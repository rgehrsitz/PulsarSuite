rules:
  - name: "HighTemperatureRule"
    description: "Detects when temperature exceeds threshold"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: input:temperature
            operator: "greater_than"
            value: 30
    actions:
      - set_value:
          key: output:high_temperature
          value: true

  - name: "TemperatureRateRule"
    description: "Detects rising temperature pattern"
    conditions:
      all:
        - condition:
            type: threshold_over_time
            sensor: input:temperature
            threshold: 5
            duration: 1000  # 1 second
    actions:
      - set_value:
          key: output:temperature_rising
          value: true

  - name: "HumidityRule"
    description: "Checks if humidity is within acceptable range"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: input:humidity
            operator: "greater_than"
            value: 30
        - condition:
            type: comparison
            sensor: input:humidity
            operator: "less_than"
            value: 70
    actions:
      - set_value:
          key: output:humidity_normal
          value: true

  - name: "ComfortIndexRule"
    description: "Calculates a comfort index based on temperature and humidity"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: input:temperature
            operator: "greater_than"
            value: 0
        - condition:
            type: comparison
            sensor: input:humidity
            operator: "greater_than"
            value: 0
    actions:
      - set_value:
          key: output:comfort_index
          value_expression: "(0.5 * (input:temperature + 61.0 + ((input:temperature - 68.0) * 1.2) + (input:humidity * 0.094)))"

  - name: "AlertRule"
    description: "Generates alert if temperature is high and humidity is not normal"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: output:high_temperature
            operator: "equal_to"
            value: true
        - condition:
            type: comparison
            sensor: output:humidity_normal
            operator: "equal_to"
            value: false
    actions:
      - set_value:
          key: output:alert_status
          value: "critical"
      - set_value:
          key: output:alert_message
          value_expression: "\"High temperature alert: \" + input:temperature + \" with abnormal humidity: \" + input:humidity"