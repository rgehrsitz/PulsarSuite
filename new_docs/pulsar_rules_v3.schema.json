{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "title": "Pulsar Action-Oriented Rule Set (v3)",
    "type": "object",
    "additionalProperties": false,
    "properties": {
        "version": {
            "type": "integer",
            "const": 3
        },
        "rules": {
            "type": "array",
            "minItems": 1,
            "uniqueItems": true,
            "items": {
                "$ref": "#/$defs/rule"
            }
        }
    },
    "required": [
        "version",
        "rules"
    ],
    "$defs": {
        /* ─────────────────────────
         Core primitives
      ───────────────────────── */
        "identifier": {
            "type": "string",
            "pattern": "^[A-Za-z_][A-Za-z0-9_]*$"
        },
        "duration": {
            "type": "string",
            "pattern": "^(\\d+)(ms|s|m|h|d)$"
        },
        /* ─────────────────────────
         Input & fallback
      ───────────────────────── */
        "fallback": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "strategy": {
                    "type": "string",
                    "enum": [
                        "propagate_unavailable",
                        "use_default",
                        "use_last_known",
                        "skip_rule"
                    ],
                    "default": "propagate_unavailable"
                },
                "default_value": {
                    "type": [
                        "number",
                        "string",
                        "boolean"
                    ]
                },
                "max_age": {
                    "$ref": "#/$defs/duration"
                }
            },
            "if": {
                "properties": {
                    "strategy": {
                        "const": "use_default"
                    }
                }
            },
            "then": {
                "required": [
                    "default_value"
                ]
            },
            "else": {
                "if": {
                    "properties": {
                        "strategy": {
                            "const": "use_last_known"
                        }
                    }
                },
                "then": {
                    "required": [
                        "max_age"
                    ]
                }
            }
        },
        "input": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "id": {
                    "$ref": "#/$defs/identifier"
                },
                "required": {
                    "type": "boolean",
                    "default": true
                },
                "fallback": {
                    "$ref": "#/$defs/fallback"
                }
            },
            "required": [
                "id"
            ],
            "allOf": [
                {
                    "if": {
                        "properties": {
                            "required": {
                                "const": true
                            }
                        }
                    },
                    "then": {
                        "not": {
                            "required": [
                                "fallback"
                            ]
                        }
                    }
                }
            ]
        },
        /* ─────────────────────────
         Condition leaf (3 variants)
      ───────────────────────── */
        "condition_leaf": {
            "type": "object",
            "additionalProperties": false,
            "oneOf": [
                /* 1️⃣ comparison */
                {
                    "properties": {
                        "type": {
                            "const": "comparison"
                        }
                    },
                    "required": [
                        "type",
                        "sensor",
                        "operator",
                        "value"
                    ],
                    "properties": {
                        "type": {
                            "const": "comparison"
                        },
                        "sensor": {
                            "$ref": "#/$defs/identifier"
                        },
                        "operator": {
                            "type": "string",
                            "enum": [
                                ">",
                                ">=",
                                "<",
                                "<=",
                                "==",
                                "!="
                            ]
                        },
                        "value": {
                            "type": [
                                "number",
                                "string",
                                "boolean"
                            ]
                        }
                    }
                },
                /* 2️⃣ expression */
                {
                    "properties": {
                        "type": {
                            "const": "expression"
                        }
                    },
                    "required": [
                        "type",
                        "expression"
                    ],
                    "properties": {
                        "type": {
                            "const": "expression"
                        },
                        "expression": {
                            "type": "string"
                        }
                    }
                },
                /* 3️⃣ threshold_over_time (new) */
                {
                    "properties": {
                        "type": {
                            "const": "threshold_over_time"
                        }
                    },
                    "required": [
                        "type",
                        "sensor",
                        "operator",
                        "threshold",
                        "duration"
                    ],
                    "properties": {
                        "type": {
                            "const": "threshold_over_time"
                        },
                        "sensor": {
                            "$ref": "#/$defs/identifier"
                        },
                        "operator": {
                            "type": "string",
                            "enum": [
                                ">",
                                ">=",
                                "<",
                                "<="
                            ]
                        },
                        "threshold": {
                            "type": "number"
                        },
                        "duration": {
                            "$ref": "#/$defs/duration"
                        }
                    }
                }
            ]
        },
        /* ─────────────────────────
         Condition group (recursive)
      ───────────────────────── */
        "condition_group": {
            "type": "object",
            "additionalProperties": false,
            "oneOf": [
                {
                    "required": [
                        "all"
                    ],
                    "properties": {
                        "all": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "#/$defs/condition_node"
                            }
                        }
                    }
                },
                {
                    "required": [
                        "any"
                    ],
                    "properties": {
                        "any": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "#/$defs/condition_node"
                            }
                        }
                    }
                },
                {
                    "required": [
                        "not"
                    ],
                    "properties": {
                        "not": {
                            "$ref": "#/$defs/condition_node"
                        }
                    }
                }
            ]
        },
        "condition_node": {
            "oneOf": [
                {
                    "$ref": "#/$defs/condition_leaf"
                },
                {
                    "$ref": "#/$defs/condition_group"
                }
            ]
        },
        /* ─────────────────────────
         Action verbs (+ emit)
      ───────────────────────── */
        "emit_field": {
            "type": "string",
            "enum": [
                "always",
                "on_change",
                "on_enter"
            ],
            "default": "always"
        },
        "action.set": {
            "type": "object",
            "required": [
                "set"
            ],
            "properties": {
                "set": {
                    "type": "object",
                    "required": [
                        "key",
                        "value_expression"
                    ],
                    "properties": {
                        "key": {
                            "$ref": "#/$defs/identifier"
                        },
                        "value_expression": {
                            "type": "string"
                        },
                        "emit": {
                            "$ref": "#/$defs/emit_field"
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
        "action.log": {
            "type": "object",
            "required": [
                "log"
            ],
            "properties": {
                "log": {
                    "type": "string"
                },
                "emit": {
                    "$ref": "#/$defs/emit_field"
                }
            },
            "additionalProperties": false
        },
        "action.buffer": {
            "type": "object",
            "required": [
                "buffer"
            ],
            "properties": {
                "buffer": {
                    "type": "object",
                    "required": [
                        "key",
                        "value_expression",
                        "max_items"
                    ],
                    "properties": {
                        "key": {
                            "$ref": "#/$defs/identifier"
                        },
                        "value_expression": {
                            "type": "string"
                        },
                        "max_items": {
                            "type": "integer",
                            "minimum": 1
                        },
                        "emit": {
                            "$ref": "#/$defs/emit_field"
                        }
                    },
                    "additionalProperties": false
                }
            },
            "additionalProperties": false
        },
        "action": {
            "oneOf": [
                {
                    "$ref": "#/$defs/action.set"
                },
                {
                    "$ref": "#/$defs/action.log"
                },
                {
                    "$ref": "#/$defs/action.buffer"
                }
            ]
        },
        /* ─────────────────────────
         Rule object (with else)
      ───────────────────────── */
        "rule": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "name": {
                    "$ref": "#/$defs/identifier"
                },
                "description": {
                    "type": "string"
                },
                "inputs": {
                    "type": "array",
                    "items": {
                        "$ref": "#/$defs/input"
                    },
                    "uniqueItems": true
                },
                "conditions": {
                    "$ref": "#/$defs/condition_node"
                },
                "actions": {
                    "type": "array",
                    "minItems": 1,
                    "items": {
                        "$ref": "#/$defs/action"
                    }
                },
                "else": {
                    "type": "object",
                    "additionalProperties": false,
                    "required": [
                        "actions"
                    ],
                    "properties": {
                        "actions": {
                            "type": "array",
                            "minItems": 1,
                            "items": {
                                "$ref": "#/$defs/action"
                            }
                        }
                    }
                }
            },
            "required": [
                "name",
                "conditions",
                "actions"
            ]
        }
    }
}