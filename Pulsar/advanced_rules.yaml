# File: advanced_rules.yaml

rules:
  - name: "PressureConversion"
    description: "Converts pressure in Pascals to kilopascals"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: "pressure"
            operator: ">"
            value: 0
    actions:
      - set_value:
          key: "pressure_kpa"
          value_expression: "pressure / 1000"

  - name: "PressureAlert"
    description: "Alerts when normalized pressure exceeds threshold"
    conditions:
      all:
        - condition:
            type: expression
            expression: "pressure_kpa > 1.2"
    actions:
      - send_message:
          channel: "alerts"
          message: "Pressure is above 1.2 kPa"

  - name: "DewPointCalculation"
    description: "Calculates dew point from temperature and humidity"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: "temperature_c"
            operator: ">="
            value: 0
        - condition:
            type: comparison
            sensor: "humidity"
            operator: ">="
            value: 0
    actions:
      - set_value:
          key: "dew_point"
          value_expression: "temperature_c - ((100 - humidity) / 5)"

  - name: "HighDewPointAlert"
    description: "Alerts when dew point stays high for 10 minutes"
    conditions:
      all:
        - condition:
            type: threshold_over_time
            sensor: "dew_point"
            threshold: 20
            duration: 600000
    actions:
      - send_message:
          channel: "alerts"
          message: "Dew point has remained above 20°C for 10 minutes"

  - name: "CombinedComfortIndex"
    description: "Calculates a weighted comfort index"
    conditions:
      all:
        - condition:
            type: expression
            expression: "comfort_score >= 0"
        - condition:
            type: comparison
            sensor: "dew_point"
            operator: ">="
            value: 0
    actions:
      - set_value:
          key: "comfort_index"
          value_expression: "(comfort_score * 0.7) - (dew_point * 0.3)"

  - name: "LowComfortIndexWarning"
    description: "Sends warning when comfort index falls below threshold"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: "comfort_index"
            operator: "<"
            value: 40
    actions:
      - send_message:
          channel: "alerts"
          message_expression: "'Comfort index low: ' + comfort_index"
          include_data: true

  - name: "RapidTempRiseWarning"
    description: "Detects rapid temperature rise over 5 minutes"
    conditions:
      all:
        - condition:
            type: threshold_over_time
            sensor: "temperature_c"
            threshold: 2
            duration: 300000
    actions:
      - send_message:
          channel: "alerts"
          message: "Temperature rose by more than 2°C in 5 minutes"

  - name: "SustainedLowHumidity"
    description: "Alerts when humidity stays below 30% for 15 minutes"
    conditions:
      all:
        - condition:
            type: threshold_over_time
            sensor: "humidity"
            threshold: 30
            duration: 900000
    actions:
      - send_message:
          channel: "alerts"
          message: "Humidity has been below 30% for 15 minutes"

  - name: "ComplexSensorLoadCheck"
    description: "Checks if complex sensor load exceeds threshold"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: "complex_sensor"
            property: "metrics.load"
            operator: ">"
            value: 0.8
    actions:
      - set_value:
          key: "system_overloaded"
          value_expression: "true"

  - name: "SystemOverloadAlert"
    description: "Sends system overload alert when dependent conditions met"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: "system_overloaded"
            operator: "=="
            value: true
        - condition:
            type: comparison
            sensor: "pressure_kpa"
            operator: "<"
            value: 1.0
    actions:
      - send_message:
          channel: "system_alerts"
          message_expression: "'Overload on ' + complex_sensor.id"

  - name: "MultiConditionCriticalAlert"
    description: "Alerts on critical environmental conditions"
    conditions:
      any:
        - all:
            - condition:
                type: comparison
                sensor: "pressure"
                operator: "<"
                value: 950
            - condition:
                type: comparison
                sensor: "humidity"
                operator: ">"
                value: 80
        - condition:
            type: expression
            expression: "temperature_c > 35 && humidity > 60"
    actions:
      - send_message:
          channel: "critical"
          message: "Critical environmental conditions detected"

  - name: "AverageTempHumidity"
    description: "Computes average of temperature and humidity"
    conditions:
      all:
        - condition:
            type: expression
            expression: "temperature_c >= 0 && humidity >= 0"
    actions:
      - set_value:
          key: "avg_temp_hum"
          value_expression: "(temperature_c + humidity) / 2"

  - name: "LowAvgTempHumAlert"
    description: "Alerts when avg_temp_hum is low for 5 minutes"
    conditions:
      all:
        - condition:
            type: threshold_over_time
            sensor: "avg_temp_hum"
            threshold: 20
            duration: 300000
    actions:
      - send_message:
          channel: "alerts"
          message: "Average of temperature and humidity has been below 20 for 5 minutes"

  - name: "CombinedMetricCalc"
    description: "Sums avg_temp_hum and dew_point"
    conditions:
      all:
        - condition:
            type: expression
            expression: "avg_temp_hum >= 0 && dew_point >= 0"
    actions:
      - set_value:
          key: "combined_metric"
          value_expression: "avg_temp_hum + dew_point"

  - name: "CombinedMetricAlert"
    description: "Alerts when combined metric exceeds threshold"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: "combined_metric"
            operator: ">"
            value: 100
    actions:
      - send_message:
          channel: "alerts"
          message: "Combined metric above 100"

  - name: "BatteryStatusFlag"
    description: "Flags low battery based on device info"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: "device_info"
            property: "status.batteryLevel"
            operator: "<="
            value: 20
    actions:
      - set_value:
          key: "battery_low_flag"
          value_expression: "true"

  - name: "LowBatteryAlert"
    description: "Alerts when battery is low"
    conditions:
      all:
        - condition:
            type: expression
            expression: "battery_low_flag == true"
    actions:
      - send_message:
          channel: "device_alerts"
          message_expression: "'Battery low on ' + device_info.id"

  - name: "HistoricalHighPressureFlag"
    description: "Flags when pressure >1050 PA for 15 minutes"
    conditions:
      all:
        - condition:
            type: threshold_over_time
            sensor: "pressure"
            threshold: 1050
            duration: 900000
    actions:
      - set_value:
          key: "high_pressure_flag"
          value_expression: "true"

  - name: "HighPressureNotification"
    description: "Notifies when high pressure flag is set"
    conditions:
      all:
        - condition:
            type: comparison
            sensor: "high_pressure_flag"
            operator: "=="
            value: true
    actions:
      - send_message:
          channel: "alerts"
          message: "Pressure has been above 1050 PA for 15 minutes"
