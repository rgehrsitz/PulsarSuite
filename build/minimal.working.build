<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <SolutionDir>$(MSBuildThisFileDirectory)../</SolutionDir>
    <SrcDir>$(SolutionDir)src/</SrcDir>
    <RulesDir>$(SrcDir)Rules/</RulesDir>
    <BinDir>$(SrcDir)Bin/</BinDir>
    <OutputDir>$(SolutionDir)output/</OutputDir>
    <DistDir>$(OutputDir)dist/</DistDir>
    <ReportsDir>$(OutputDir)reports/</ReportsDir>
    <TestsDir>$(SrcDir)Tests/</TestsDir>
    <LogsDir>$(OutputDir)logs/</LogsDir>
    <ProjectName Condition="'$(ProjectName)' == ''">DefaultProject</ProjectName>
    <RulesFile Condition="'$(RulesFile)' == ''">$(RulesDir)$(ProjectName)/rules/temperature_rules.yaml</RulesFile>
    <PulsarDir>$(SolutionDir)Pulsar/</PulsarDir>
    <BeaconTesterDir>$(SolutionDir)BeaconTester/</BeaconTesterDir>
    <PulsarCompilerProject>$(PulsarDir)Pulsar.Compiler/Pulsar.Compiler.csproj</PulsarCompilerProject>
    <BeaconTesterRunnerProject>$(BeaconTesterDir)BeaconTester.Runner/BeaconTester.Runner.csproj</BeaconTesterRunnerProject>
  </PropertyGroup>

  <!-- WORKING TARGETS -->
  
  <Target Name="ValidateRules">
    <Message Text="Validating rules file..." Importance="high" />
    <Exec Command="dotnet run --project $(PulsarCompilerProject) validate --rules=$(RulesFile) --config=system_config.yaml" WorkingDirectory="$(PulsarDir)" />
    <Message Text="Rule validation successful." Importance="high" />
  </Target>

  <Target Name="CompileRules" DependsOnTargets="ValidateRules">
    <Message Text="Compiling rules to C# code..." Importance="high" />
    <MakeDir Directories="$(BinDir)$(ProjectName)" />
    <Exec Command="dotnet run --project $(PulsarCompilerProject) compile --rules=$(RulesFile) --output=$(BinDir)$(ProjectName) --config=system_config.yaml" WorkingDirectory="$(PulsarDir)" />
    <Message Text="Rules compiled successfully." Importance="high" />
  </Target>

  <Target Name="GenerateTests" DependsOnTargets="CompileRules">
    <Message Text="Generating test scenarios..." Importance="high" />
    <PropertyGroup>
      <TestScenariosFile>$(TestsDir)$(ProjectName)/test_scenarios.json</TestScenariosFile>
    </PropertyGroup>
    <MakeDir Directories="$(TestsDir)$(ProjectName)" />
    <Exec Command="dotnet run --project $(BeaconTesterRunnerProject) generate --rules=$(RulesFile) --output=$(TestScenariosFile)" WorkingDirectory="$(BeaconTesterDir)" />
    <Message Text="Test scenarios generated successfully." Importance="high" />
  </Target>

  <!-- TRANSITIONAL TARGETS (calling shell scripts) -->
  
  <Target Name="BuildBeacon" DependsOnTargets="CompileRules">
    <Message Text="MSBuild BuildBeacon target not fully implemented yet." Importance="high" />
    <Message Text="Please run one of these commands to build Beacon:" Importance="high" />
    <Message Text="  1. Use existing script: bash Scripts/compile-beacon.sh $(RulesFile) output/dist/$(ProjectName)" Importance="high" />
    <Message Text="  2. Run compiler directly: dotnet run --project Pulsar/Pulsar.Compiler/Pulsar.Compiler.csproj beacon --rules=$(RulesFile) --output=output/dist/$(ProjectName) --config=system_config.yaml --target=linux-x64 --verbose" Importance="high" />
    <Message Text="Then build the generated solution: cd output/dist/$(ProjectName)/Beacon && dotnet build" Importance="high" />
  </Target>

  <Target Name="RunTests" DependsOnTargets="GenerateTests">
    <Message Text="Test execution requires a running Beacon instance." Importance="high" />
    <Message Text="Please start Beacon manually, then run:" Importance="high" />
    <Message Text="  BEACON_CYCLE_TIME=500 STEP_DELAY_MULTIPLIER=2 TIMEOUT_MULTIPLIER=2 dotnet run --project BeaconTester/BeaconTester.Runner/BeaconTester.Runner.csproj run --scenarios=src/Tests/$(ProjectName)/test_scenarios.json --output=output/reports/$(ProjectName)/test_results.json --redis-host=localhost --redis-port=6379" Importance="high" />
  </Target>

  <!-- META TARGETS -->
  
  <Target Name="Build" DependsOnTargets="CompileRules;GenerateTests">
    <Message Text="Rules compiled and tests generated successfully. BuildBeacon target needs manual intervention." Importance="high" />
  </Target>

  <Target Name="RunEndToEnd">
    <Message Text="END-TO-END RULE TESTING WORKFLOW" Importance="high" />
    <Message Text="Full end-to-end testing is not yet fully automated in MSBuild." Importance="high" />
    <Message Text="Please use the following steps:" Importance="high" />
    <Message Text="  1. dotnet build /t:CompileRules /p:ProjectName=$(ProjectName) /p:RulesFile=$(RulesFile)" Importance="high" />
    <Message Text="  2. dotnet build /t:GenerateTests /p:ProjectName=$(ProjectName) /p:RulesFile=$(RulesFile)" Importance="high" />
    <Message Text="  3. bash Scripts/compile-beacon.sh $(RulesFile) output/dist/$(ProjectName)" Importance="high" />
    <Message Text="  4. cd output/dist/$(ProjectName)/Beacon/Beacon.Runtime/bin/Debug/net9.0" Importance="high" />
    <Message Text="  5. BEACON_LOG_LEVEL=Debug dotnet Beacon.Runtime.dll --nometrics --testmode --test-cycle-time 500 --verbose" Importance="high" />
    <Message Text="  6. In another terminal:" Importance="high" />
    <Message Text="     BEACON_CYCLE_TIME=500 STEP_DELAY_MULTIPLIER=2 TIMEOUT_MULTIPLIER=2 dotnet run --project BeaconTester/BeaconTester.Runner/BeaconTester.Runner.csproj run --scenarios=src/Tests/$(ProjectName)/test_scenarios.json --output=output/reports/$(ProjectName)/test_results.json --redis-host=localhost --redis-port=6379" Importance="high" />
  </Target>
</Project>
