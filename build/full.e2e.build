<?xml version="1.0" encoding="utf-8"?>
<Project>
  <PropertyGroup>
    <SolutionDir>$(MSBuildThisFileDirectory)../</SolutionDir>
    <SrcDir>$(SolutionDir)src/</SrcDir>
    <RulesDir>$(SrcDir)Rules/</RulesDir>
    <BinDir>$(SrcDir)Bin/</BinDir>
    <OutputDir>$(SolutionDir)output/</OutputDir>
    <DistDir>$(OutputDir)dist/</DistDir>
    <ReportsDir>$(OutputDir)reports/</ReportsDir>
    <TestsDir>$(SrcDir)Tests/</TestsDir>
    <LogsDir>$(OutputDir)logs/</LogsDir>
    <ProjectName Condition="'$(ProjectName)' == ''">DefaultProject</ProjectName>
    <RulesFile Condition="'$(RulesFile)' == ''">$(SolutionDir)src/Rules/TemperatureExample/rules/temperature_rules.yaml</RulesFile>
    <ConfigFile Condition="'$(ConfigFile)' == ''">$(SolutionDir)src/Rules/TemperatureExample/config/system_config.yaml</ConfigFile>
    <ValidationDir Condition="'$(ValidationDir)' == ''">$(SolutionDir)Validation/</ValidationDir>
    <BeaconOutputDir Condition="'$(BeaconOutputDir)' == ''">$(ValidationDir)beacon/</BeaconOutputDir>
    <TestDir Condition="'$(TestDir)' == ''">$(ValidationDir)tests/</TestDir>
    <TestScenariosFile Condition="'$(TestScenariosFile)' == ''">$(TestDir)test_scenarios.json</TestScenariosFile>
    <TestResultsFile Condition="'$(TestResultsFile)' == ''">$(TestDir)results.json</TestResultsFile>
    <TestReportFile Condition="'$(TestReportFile)' == ''">$(TestDir)report.html</TestReportFile>
    <PulsarDir>$(SolutionDir)Pulsar/</PulsarDir>
    <BeaconTesterDir>$(SolutionDir)BeaconTester/</BeaconTesterDir>
    <PulsarCompilerProject>$(PulsarDir)Pulsar.Compiler/Pulsar.Compiler.csproj</PulsarCompilerProject>
    <PulsarCompilerOutputDir>$(PulsarDir)Pulsar.Compiler/bin/$(Configuration)/net9.0/</PulsarCompilerOutputDir> <!-- Adjust Configuration/TargetFramework as needed -->
    <PulsarCompilerDll>$(PulsarCompilerOutputDir)Pulsar.Compiler.dll</PulsarCompilerDll>
    <BeaconTesterRunnerProject>$(BeaconTesterDir)BeaconTester.Runner/BeaconTester.Runner.csproj</BeaconTesterRunnerProject>
    <BeaconCycleTime>500</BeaconCycleTime>
    <StepDelayMultiplier>2</StepDelayMultiplier>
    <TimeoutMultiplier>2</TimeoutMultiplier>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration> <!-- Default to Debug if not specified -->
  </PropertyGroup>

  <!-- Build Pulsar Compiler if necessary -->
  <Target Name="BuildPulsarCompiler" BeforeTargets="BuildBeacon">
    <Message Text="Building Pulsar Compiler ($(Configuration))..." Importance="high" Condition="!Exists('$(PulsarCompilerDll)')" />
    <Exec Command="dotnet build $(PulsarCompilerProject) -c $(Configuration)" Condition="!Exists('$(PulsarCompilerDll)')" />
    <Error Text="Pulsar Compiler DLL not found at $(PulsarCompilerDll) after build attempt." Condition="!Exists('$(PulsarCompilerDll)')" />
  </Target>

  <!-- WORKING TARGETS -->

  <!-- Add BuildBeacon target -->
  <Target Name="BuildBeacon" DependsOnTargets="BuildPulsarCompiler">
    <Message Text="Compiling Beacon from $(RulesFile)..." Importance="high" />
    <MakeDir Directories="$(BeaconOutputDir)" />
    <Exec Command="dotnet &quot;$(PulsarCompilerDll)&quot; beacon --rules=&quot;$(RulesFile)&quot; --output=&quot;$(BeaconOutputDir)&quot; --config=&quot;$(ConfigFile)&quot; --target=linux-x64 --force" WorkingDirectory="$(SolutionDir)" />
    
    <!-- Replace the generated RedisService.cs with our fixed version -->
    <PropertyGroup>
      <RedisServicePath>$(BeaconOutputDir)/Beacon/Beacon.Runtime/Services/RedisService.cs</RedisServicePath>
      <FixedRedisServicePath>$(MSBuildThisFileDirectory)/RedisService.cs.fixed</FixedRedisServicePath>
    </PropertyGroup>
    
    <!-- Use our completely rewritten RedisService.cs to avoid template processing issues -->
    <Copy SourceFiles="$(FixedRedisServicePath)" DestinationFiles="$(RedisServicePath)" OverwriteReadOnlyFiles="true" />
    
    <Message Text="Beacon compiled with fixed RedisService.cs implementation." Importance="high" />
  </Target>



  <!-- Add BuildBeaconSolution target -->
  <Target Name="BuildBeaconSolution" DependsOnTargets="BuildBeacon">
    <Message Text="Building the Beacon solution..." Importance="high" />
    <Exec Command="dotnet build -c $(Configuration)" WorkingDirectory="$(BeaconOutputDir)/Beacon" />
    <PropertyGroup>
      <BeaconRuntimePath>$(BeaconOutputDir)/Beacon/Beacon.Runtime/bin/$(Configuration)/net9.0/Beacon.Runtime.dll</BeaconRuntimePath>
      <BeaconRuntimeDir>$(BeaconOutputDir)/Beacon/Beacon.Runtime/bin/$(Configuration)/net9.0</BeaconRuntimeDir>
    </PropertyGroup>
    <Message Text="Beacon solution built successfully." Importance="high" />
  </Target>

  <!-- Add GenerateTests target -->
  <Target Name="GenerateTests">
    <Message Text="Generating test scenarios..." Importance="high" />
    <MakeDir Directories="$(TestDir)" />
    <Exec Command="dotnet run --project $(BeaconTesterRunnerProject) generate --rules=$(RulesFile) --output=$(TestScenariosFile)" WorkingDirectory="$(SolutionDir)" />
    <Message Text="Test scenarios generated successfully." Importance="high" />
  </Target>

  <!-- Add RunTests target -->
  <Target Name="RunTests" DependsOnTargets="BuildBeaconSolution;GenerateTests">
    <Message Text="Running tests against Beacon..." Importance="high" />
    
    <!-- Clean Redis keys -->
    <Message Text="Cleaning Redis keys..." Importance="high" />
    <Exec Command="redis-cli keys &quot;input:*&quot; | xargs -r redis-cli del" ContinueOnError="true" />
    <Exec Command="redis-cli keys &quot;output:*&quot; | xargs -r redis-cli del" ContinueOnError="true" />
    <Exec Command="redis-cli keys &quot;buffer:*&quot; | xargs -r redis-cli del" ContinueOnError="true" />
    <Exec Command="redis-cli keys &quot;state:*&quot; | xargs -r redis-cli del" ContinueOnError="true" />
    
    <!-- No external configuration needed - Beacon is fully AOT compiled with configuration embedded -->
    
    <!-- Start Beacon application - using AOT compiled version with embedded configuration -->
    <Message Text="Starting Beacon application..." Importance="high" />
    <MakeDir Directories="$(LogsDir)" />
    <Exec Command="dotnet Beacon.Runtime.dll > $(LogsDir)/beacon.log 2>&amp;1 &amp;" WorkingDirectory="$(BeaconRuntimeDir)" />
    
    <!-- Wait for Beacon to start -->
    <Message Text="Waiting for Beacon to initialize..." Importance="high" />
    <Exec Command="sleep 5" />
    
    <!-- Run the tests -->
    <Exec Command="dotnet run --project $(BeaconTesterRunnerProject) run --scenarios=$(TestScenariosFile) --output=$(TestResultsFile) --redis-host=localhost --redis-port=6379" WorkingDirectory="$(SolutionDir)" ContinueOnError="true" />
    
    <!-- Stop Beacon application -->
    <Message Text="Stopping Beacon application..." Importance="high" />
    <Exec Command="pkill -f Beacon.Runtime || true" ContinueOnError="true" />
    <Message Text="Beacon stopped." Importance="high" />
    
    <Message Text="Tests executed. Results saved to $(TestResultsFile)" Importance="high" />
  </Target>

  <!-- Add ReportTests target -->
  <Target Name="ReportTests">
    <Message Text="Generating test report..." Importance="high" />
    <Exec Command="dotnet run --project $(BeaconTesterRunnerProject) report --results=$(TestResultsFile) --output=$(TestReportFile) --format=html" WorkingDirectory="$(SolutionDir)" />
    <Message Text="Test report generated successfully." Importance="high" />
  </Target>

  <!-- Update BuildAll target -->
  <Target Name="BuildAll" DependsOnTargets="BuildPulsarCompiler;GenerateTests;BuildBeacon;BuildBeaconSolution;RunTests;ReportTests">
    <Message Text="*** Full End-to-End Build and Test Completed Successfully ***" Importance="high" />
  </Target>

  <!-- META TARGETS -->

  <Target Name="Build" DependsOnTargets="BuildBeacon;GenerateTests">
    <Message Text="Build complete. Beacon application built and test scenarios generated." Importance="high" />
  </Target>

  <!-- FULLY AUTOMATED RunEndToEnd TARGET -->
  <Target Name="RunEndToEnd" DependsOnTargets="Clean;RunTests;FinalCleanup">
    <Message Text="END-TO-END TEST WORKFLOW COMPLETED" Importance="high" />
    <!-- Optionally, add result validation here -->
  </Target>

  <Target Name="Clean">
    <Message Text="Cleaning environment..." Importance="high" />
    <Exec Command="pkill -f Beacon.Runtime || true" ContinueOnError="true" />
    <Exec Command="pkill -f BeaconTester || true" ContinueOnError="true" />
    <Exec Command="redis-cli FLUSHALL" ContinueOnError="true" />
    <RemoveDir Directories="$(ReportsDir)$(ProjectName)" ContinueOnError="true" />
    <RemoveDir Directories="$(LogsDir)$(ProjectName)" ContinueOnError="true" />
    <RemoveDir Directories="$(DistDir)$(ProjectName)" ContinueOnError="true" />
    <RemoveDir Directories="$(BinDir)$(ProjectName)" ContinueOnError="true" />
    <RemoveDir Directories="$(TestsDir)$(ProjectName)" ContinueOnError="true" />
    <Message Text="Environment cleaned." Importance="high" />
  </Target>
  
  <Target Name="FinalCleanup">
     <Message Text="Final cleanup..." Importance="high" />
     <Exec Command="redis-cli FLUSHALL" ContinueOnError="true" />
     <Message Text="Final cleanup complete." Importance="high" />
  </Target>

</Project>
