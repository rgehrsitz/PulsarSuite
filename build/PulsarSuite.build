<?xml version="1.0" encoding="utf-8"?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">

  <!-- Properties -->
  <PropertyGroup>
    <SolutionDir>$(MSBuildThisFileDirectory)..\</SolutionDir>
    <PulsarDir>$(SolutionDir)Pulsar\</PulsarDir>
    <BeaconTesterDir>$(SolutionDir)BeaconTester\</BeaconTesterDir>
    <SrcDir>$(SolutionDir)src\</SrcDir>
    <OutputDir>$(SolutionDir)output\</OutputDir>
    <DistDir>$(OutputDir)dist\</OutputDir>
    <BinDir>$(OutputDir)Bin\</OutputDir>
    <TestsDir>$(OutputDir)Tests\</OutputDir>
    <ReportsDir>$(OutputDir)reports\</ReportsDir>
    <LogsDir>$(OutputDir)logs\</LogsDir>

    <!-- Project-specific paths -->
    <ProjectBinDir>$(BinDir)$(ProjectName)\</ProjectBinDir>
    <ProjectDistDir>$(DistDir)$(ProjectName)\</ProjectDistDir>
    <ProjectTestsDir>$(TestsDir)$(ProjectName)\</ProjectTestsDir>
    <ProjectReportsDir>$(ReportsDir)$(ProjectName)\</ProjectReportsDir>
    <ProjectLogsDir>$(LogsDir)$(ProjectName)\</ProjectLogsDir>

    <!-- Tool paths -->
    <PulsarCompilerProject>$(PulsarDir)Pulsar.Compiler\Pulsar.Compiler.csproj</PulsarCompilerProject>
    <BeaconTesterRunnerProject>$(BeaconTesterDir)BeaconTester.Runner\BeaconTester.Runner.csproj</BeaconTesterRunnerProject>

    <!-- Default values -->
    <ProjectName Condition="'$(ProjectName)' == ''">TemperatureExample</ProjectName>
    <RulesFile Condition="'$(RulesFile)' == ''">$(SrcDir)Rules\$(ProjectName)\rules\temperature_rules.yaml</RulesFile>
    <ConfigFile Condition="'$(ConfigFile)' == ''">$(SrcDir)Rules\$(ProjectName)\config\system_config.yaml</ConfigFile>
    <Configuration Condition="'$(Configuration)' == ''">Debug</Configuration>

    <!-- Test configuration -->
    <BeaconCycleTime>500</BeaconCycleTime>
    <StepDelayMultiplier>2</StepDelayMultiplier>
    <TimeoutMultiplier>3</TimeoutMultiplier>
  </PropertyGroup>

  <!-- Clean target -->
  <Target Name="Clean">
    <Message Text="Cleaning environment..." Importance="high" />
    <Exec Command="pkill -f Beacon.Runtime || true" ContinueOnError="true" />
    <Exec Command="pkill -f BeaconTester || true" ContinueOnError="true" />
    <Exec Command="redis-cli FLUSHALL" ContinueOnError="true" />
    <RemoveDir Directories="$(ProjectReportsDir)" ContinueOnError="true" />
    <RemoveDir Directories="$(ProjectLogsDir)" ContinueOnError="true" />
    <RemoveDir Directories="$(ProjectDistDir)" ContinueOnError="true" />
    <RemoveDir Directories="$(ProjectBinDir)" ContinueOnError="true" />
    <RemoveDir Directories="$(ProjectTestsDir)" ContinueOnError="true" />
    <Message Text="Environment cleaned." Importance="high" />
  </Target>

  <!-- Validate rules -->
  <Target Name="ValidateRules">
    <Message Text="Validating rules..." Importance="high" />
    <Exec Command="dotnet run --project $(PulsarCompilerProject) validate --rules=$(RulesFile) --config=$(ConfigFile)" />
    <Message Text="Rules validation completed." Importance="high" />
  </Target>

  <!-- Compile rules -->
  <Target Name="CompileRules" DependsOnTargets="ValidateRules">
    <Message Text="Compiling rules..." Importance="high" />
    <MakeDir Directories="$(ProjectBinDir)" />
    <Exec Command="dotnet run --project $(PulsarCompilerProject) compile --rules=$(RulesFile) --config=$(ConfigFile) --output=$(ProjectBinDir)" />
    <Message Text="Rules compilation completed." Importance="high" />
  </Target>

  <!-- Generate Beacon application -->
  <Target Name="GenerateBeacon" DependsOnTargets="CompileRules">
    <Message Text="Generating Beacon application..." Importance="high" />
    <MakeDir Directories="$(ProjectDistDir)" />
    <Exec Command="dotnet run --project $(PulsarCompilerProject) beacon --rules=$(RulesFile) --compiled-rules-dir=$(ProjectBinDir) --output=$(ProjectDistDir) --config=$(ConfigFile) --target=linux-x64" />
    <Message Text="Beacon application generation completed." Importance="high" />
  </Target>

  <!-- Build Beacon runtime -->
  <Target Name="BuildBeacon" DependsOnTargets="GenerateBeacon">
    <Message Text="Building Beacon runtime..." Importance="high" />
    <Exec Command="dotnet publish $(ProjectDistDir)/Beacon/Beacon.Runtime/Beacon.Runtime.csproj -c $(Configuration) -r linux-x64 --self-contained true /p:PublishSingleFile=true" />
    <Message Text="Beacon runtime build completed." Importance="high" />
  </Target>

  <!-- Generate test scenarios -->
  <Target Name="GenerateTests" DependsOnTargets="CompileRules">
    <Message Text="Generating test scenarios..." Importance="high" />
    <MakeDir Directories="$(ProjectTestsDir)" />
    <Exec Command="dotnet run --project $(BeaconTesterRunnerProject) generate --rules=$(RulesFile) --output=$(ProjectTestsDir)/test_scenarios.json" WorkingDirectory="$(BeaconTesterDir)" />
    <Message Text="Test scenarios generation completed." Importance="high" />
  </Target>

  <!-- Run tests (requires Beacon to be running) -->
  <Target Name="RunTests" DependsOnTargets="GenerateTests">
    <Message Text="Running tests..." Importance="high" />
    <MakeDir Directories="$(ProjectReportsDir)" />
    <PropertyGroup>
      <BeaconTesterEnvVars>BEACON_CYCLE_TIME=$(BeaconCycleTime) STEP_DELAY_MULTIPLIER=$(StepDelayMultiplier) TIMEOUT_MULTIPLIER=$(TimeoutMultiplier)</BeaconTesterEnvVars>
    </PropertyGroup>
    <Exec Command="$(BeaconTesterEnvVars) dotnet run --project $(BeaconTesterRunnerProject) run --scenarios=$(ProjectTestsDir)/test_scenarios.json --output=$(ProjectReportsDir)/test_results.json --redis-host=localhost --redis-port=6379" WorkingDirectory="$(BeaconTesterDir)" />
    <Message Text="Test execution completed." Importance="high" />
  </Target>

  <!-- Full end-to-end workflow -->
  <Target Name="RunEndToEnd" DependsOnTargets="Clean;BuildBeacon;RunTests">
    <Message Text="End-to-end workflow completed successfully!" Importance="high" />
  </Target>

  <!-- Default build target -->
  <Target Name="Build" DependsOnTargets="BuildBeacon">
    <Message Text="Build completed successfully." Importance="high" />
  </Target>

</Project>
