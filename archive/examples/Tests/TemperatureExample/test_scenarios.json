{
  "scenarios": [
    {
      "name": "HighTemperatureRuleBasicTest",
      "description": "Basic test for rule HighTemperatureRule: Detects when temperature exceeds threshold",
      "preSetOutputs": {
        "output:high_temperature": false
      },
      "clearOutputs": true,
      "steps": [
        {
          "name": "Positive test case",
          "description": "Test inputs that should trigger the rule",
          "inputs": [
            {
              "key": "input:temperature",
              "value": 40,
              "format": 0,
              "field": null
            },
            {
              "key": "input:humidity",
              "value": 40,
              "format": 0,
              "field": null
            }
          ],
          "delay": 500,
          "delayMultiplier": null,
          "expectations": [
            {
              "key": "output:high_temperature",
              "field": null,
              "expected": true,
              "validator": "boolean",
              "format": 0,
              "tolerance": null,
              "timeoutMs": 1000,
              "timeoutMultiplier": null,
              "pollingIntervalMs": null,
              "pollingIntervalFactor": null
            }
          ],
          "result": null
        },
        {
          "name": "Negative test case",
          "description": "Test inputs that should not trigger the rule",
          "inputs": [
            {
              "key": "input:temperature",
              "value": 20,
              "format": 0,
              "field": null
            },
            {
              "key": "input:humidity",
              "value": 20,
              "format": 0,
              "field": null
            }
          ],
          "delay": 500,
          "delayMultiplier": null,
          "expectations": [],
          "result": null
        }
      ],
      "inputs": null,
      "inputSequence": null,
      "expectedOutputs": null,
      "tolerance": null,
      "timeoutMultiplier": 1
    },
    {
      "name": "TemperatureRateRuleBasicTest",
      "description": "Basic test for rule TemperatureRateRule: Detects rising temperature pattern",
      "preSetOutputs": {
        "output:temperature_rising": false
      },
      "clearOutputs": true,
      "steps": [
        {
          "name": "Basic test for temporal rule",
          "description": "Note: This is a temporal rule that requires a sequence of values over time. See the temporal test scenario.",
          "inputs": [
            {
              "key": "input:temperature",
              "value": 5,
              "format": 0,
              "field": null
            },
            {
              "key": "input:humidity",
              "value": 40,
              "format": 0,
              "field": null
            }
          ],
          "delay": 500,
          "delayMultiplier": null,
          "expectations": [],
          "result": null
        },
        {
          "name": "Negative test case",
          "description": "Test inputs that should not trigger the rule",
          "inputs": [
            {
              "key": "input:temperature",
              "value": 5,
              "format": 0,
              "field": null
            },
            {
              "key": "input:humidity",
              "value": 20,
              "format": 0,
              "field": null
            }
          ],
          "delay": 500,
          "delayMultiplier": null,
          "expectations": [],
          "result": null
        }
      ],
      "inputs": null,
      "inputSequence": null,
      "expectedOutputs": null,
      "tolerance": null,
      "timeoutMultiplier": 1
    },
    {
      "name": "HumidityRuleBasicTest",
      "description": "Basic test for rule HumidityRule: Checks if humidity is within acceptable range",
      "preSetOutputs": {
        "output:humidity_normal": false
      },
      "clearOutputs": true,
      "steps": [
        {
          "name": "Positive test case",
          "description": "Test inputs that should trigger the rule",
          "inputs": [
            {
              "key": "input:humidity",
              "value": 42,
              "format": 0,
              "field": null
            },
            {
              "key": "input:temperature",
              "value": 40,
              "format": 0,
              "field": null
            }
          ],
          "delay": 500,
          "delayMultiplier": null,
          "expectations": [
            {
              "key": "output:humidity_normal",
              "field": null,
              "expected": true,
              "validator": "boolean",
              "format": 0,
              "tolerance": null,
              "timeoutMs": 1000,
              "timeoutMultiplier": null,
              "pollingIntervalMs": null,
              "pollingIntervalFactor": null
            }
          ],
          "result": null
        },
        {
          "name": "Negative test case",
          "description": "Test inputs that should not trigger the rule",
          "inputs": [
            {
              "key": "input:humidity",
              "value": 20,
              "format": 0,
              "field": null
            },
            {
              "key": "input:temperature",
              "value": 20,
              "format": 0,
              "field": null
            }
          ],
          "delay": 500,
          "delayMultiplier": null,
          "expectations": [],
          "result": null
        }
      ],
      "inputs": null,
      "inputSequence": null,
      "expectedOutputs": null,
      "tolerance": null,
      "timeoutMultiplier": 1
    },
    {
      "name": "ComfortIndexRuleBasicTest",
      "description": "Basic test for rule ComfortIndexRule: Calculates a comfort index based on temperature and humidity",
      "preSetOutputs": {
        "output:comfort_index": 100
      },
      "clearOutputs": true,
      "steps": [
        {
          "name": "Positive test case",
          "description": "Test inputs that should trigger the rule",
          "inputs": [
            {
              "key": "input:temperature",
              "value": 10,
              "format": 0,
              "field": null
            },
            {
              "key": "input:humidity",
              "value": 10,
              "format": 0,
              "field": null
            }
          ],
          "delay": 500,
          "delayMultiplier": null,
          "expectations": [
            {
              "key": "output:comfort_index",
              "field": null,
              "expected": 1.1700000000000028,
              "validator": "numeric",
              "format": 0,
              "tolerance": null,
              "timeoutMs": 1000,
              "timeoutMultiplier": null,
              "pollingIntervalMs": null,
              "pollingIntervalFactor": null
            }
          ],
          "result": null
        },
        {
          "name": "Negative test case",
          "description": "Test inputs that should not trigger the rule",
          "inputs": [
            {
              "key": "input:temperature",
              "value": -10,
              "format": 0,
              "field": null
            },
            {
              "key": "input:humidity",
              "value": -10,
              "format": 0,
              "field": null
            }
          ],
          "delay": 500,
          "delayMultiplier": null,
          "expectations": [],
          "result": null
        }
      ],
      "inputs": null,
      "inputSequence": null,
      "expectedOutputs": null,
      "tolerance": null,
      "timeoutMultiplier": 1
    },
    {
      "name": "AlertRuleBasicTest",
      "description": "Basic test for rule AlertRule: Generates alert if temperature is high and humidity is not normal",
      "preSetOutputs": {
        "output:alert_status": "initial_value",
        "output:alert_message": "initial_value"
      },
      "clearOutputs": true,
      "steps": [],
      "inputs": null,
      "inputSequence": null,
      "expectedOutputs": null,
      "tolerance": null,
      "timeoutMultiplier": 1
    },
    {
      "name": "AlertRuleDependencyTest",
      "description": "Tests dependencies for rule AlertRule",
      "preSetOutputs": {
        "output:high_temperature": true,
        "output:humidity_normal": false
      },
      "clearOutputs": true,
      "steps": [
        {
          "name": "Test with dependencies",
          "description": "Tests rule with dependencies satisfied",
          "inputs": [
            {
              "key": "input:temperature",
              "value": 35,
              "format": 0,
              "field": null
            },
            {
              "key": "input:humidity",
              "value": 75,
              "format": 0,
              "field": null
            }
          ],
          "delay": 500,
          "delayMultiplier": null,
          "expectations": [
            {
              "key": "output:alert_status",
              "field": null,
              "expected": "critical",
              "validator": "string",
              "format": 0,
              "tolerance": null,
              "timeoutMs": 1000,
              "timeoutMultiplier": null,
              "pollingIntervalMs": null,
              "pollingIntervalFactor": null
            },
            {
              "key": "output:alert_message",
              "field": null,
              "expected": "High temperature alert: 35 with abnormal humidity: 75",
              "validator": "string",
              "format": 0,
              "tolerance": null,
              "timeoutMs": 1000,
              "timeoutMultiplier": null,
              "pollingIntervalMs": null,
              "pollingIntervalFactor": null
            }
          ],
          "result": null
        }
      ],
      "inputs": null,
      "inputSequence": null,
      "expectedOutputs": null,
      "tolerance": null,
      "timeoutMultiplier": 1
    },
    {
      "name": "AlertRuleMissingDependencyTest",
      "description": "Tests that AlertRule doesn\u0027t trigger when dependencies are not met",
      "preSetOutputs": {
        "output:high_temperature": false,
        "output:humidity_normal": true
      },
      "clearOutputs": true,
      "steps": [
        {
          "name": "Test with missing dependencies",
          "description": "Tests rule with dependencies not satisfied",
          "inputs": [
            {
              "key": "input:temperature",
              "value": 25,
              "format": 0,
              "field": null
            },
            {
              "key": "input:humidity",
              "value": 50,
              "format": 0,
              "field": null
            }
          ],
          "delay": 500,
          "delayMultiplier": null,
          "expectations": [
            {
              "key": "output:alert_status",
              "field": null,
              "expected": null,
              "validator": "string",
              "format": 0,
              "tolerance": null,
              "timeoutMs": null,
              "timeoutMultiplier": null,
              "pollingIntervalMs": null,
              "pollingIntervalFactor": null
            },
            {
              "key": "output:alert_message",
              "field": null,
              "expected": null,
              "validator": "string",
              "format": 0,
              "tolerance": null,
              "timeoutMs": null,
              "timeoutMultiplier": null,
              "pollingIntervalMs": null,
              "pollingIntervalFactor": null
            }
          ],
          "result": null
        }
      ],
      "inputs": null,
      "inputSequence": null,
      "expectedOutputs": null,
      "tolerance": null,
      "timeoutMultiplier": 1
    },
    {
      "name": "TemperatureRateRuleTemporalTest",
      "description": "Temporal test for rule TemperatureRateRule: Detects rising temperature pattern",
      "preSetOutputs": {
        "output:temperature_rising": 0
      },
      "clearOutputs": true,
      "steps": [],
      "inputs": null,
      "inputSequence": [
        {
          "delayMs": 333
        },
        {
          "delayMs": 333
        },
        {
          "delayMs": 333
        }
      ],
      "expectedOutputs": {
        "output:temperature_rising": true
      },
      "tolerance": null,
      "timeoutMultiplier": 1
    }
  ]
}